{"version":3,"file":"static/js/1.c1b41953.chunk.js","mappings":"qh3CAGaA,EAAgBC,EAAAA,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6HAQ3BC,EAASH,EAAAA,GAAAA,OAAaI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,iG,SC6FnC,EAhGa,WACX,IAAAG,GAA8CC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnDI,EAAeF,EAAA,GAAEG,EAAkBH,EAAA,GAC1CI,GAA8CL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAnDE,EAAeD,EAAA,GAAEE,EAAkBF,EAAA,GACpCG,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMV,eAAe,IACrDW,GAAYF,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMN,eAAe,IACtDQ,GAAYH,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMG,SAAS,IACtDC,QAAQC,IAAI,cAAeH,GAsD3B,OACEI,EAAAA,EAAAA,MAAC1B,EAAa,CAAC2B,SAVI,SAAAC,GACnBA,EAAMC,iBACN,IAAMC,EArCc,SAACC,EAAKC,GAC1B,IAAIC,EAYAA,EAAeC,EAOnB,IAJA,IAAMC,EAAS,GACTC,EAAqB,GAGpBD,EAAOE,OAASL,GAAK,CAC1B,IAAMM,EAAYC,KAAKC,MAAMD,KAAKE,SAAWR,EAAaI,QACrDF,EAAOO,SAASJ,IACnBH,EAAOQ,KAAKL,EAEhB,CAGA,QAAAM,EAAA,EAAAC,EAAkBV,EAAMS,EAAAC,EAAAR,OAAAO,IAAE,CAArB,IAAME,EAAGD,EAAAD,GACZR,EAAmBO,KAAKV,EAAaa,GACvC,CAEA,OAAOV,CACT,CAIkBW,CAAcrC,EAAiBI,GAC/CE,EAAS,CACPgC,KAAM,cACNC,QAAS,CAAEvC,gBAAAA,EAAiBI,gBAAAA,EAAiBgB,QAAAA,IAEjD,EAGwCoB,SAAA,EACpCxB,EAAAA,EAAAA,MAAA,OAAAwB,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,UAASF,SAAC,mEACzBxB,EAAAA,EAAAA,MAAA,UACE2B,GAAG,UACHC,MAAO5C,EACP6C,SA3DoB,SAAA3B,GAC1BjB,EAAmBiB,EAAM4B,OAAOF,MAClC,EAyDsCJ,SAAA,EAE9BC,EAAAA,EAAAA,KAAA,UAAQG,MAAM,SAAQJ,SAAC,YACvBC,EAAAA,EAAAA,KAAA,UAAQG,MAAM,UAASJ,SAAC,aACxBC,EAAAA,EAAAA,KAAA,UAAQG,MAAM,gBAAOJ,SAAC,yBAG1BxB,EAAAA,EAAAA,MAAA,OAAAwB,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,UAASF,SAAC,4IACzBxB,EAAAA,EAAAA,MAAA,UACE2B,GAAG,UACHC,MAAOxC,EACPyC,SAnEoB,SAAA3B,GAC1Bb,EAAmBa,EAAM4B,OAAOF,MAClC,EAiEsCJ,SAAA,EAE9BC,EAAAA,EAAAA,KAAA,UAAQG,MAAM,KAAIJ,SAAC,QACnBC,EAAAA,EAAAA,KAAA,UAAQG,MAAM,KAAIJ,SAAC,QACnBC,EAAAA,EAAAA,KAAA,UAAQG,MAAM,KAAIJ,SAAC,cAGvBC,EAAAA,EAAAA,KAAC/C,EAAM,CAAC4C,KAAK,SAAQE,SAAC,+CACrB5B,EAAUe,OAAS,IAAKc,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CAACC,GAAI,SAASR,SAAC,4CAC7CxB,EAAAA,EAAAA,MAAA,OAAAwB,SAAA,CAAK,sDACShC,EAAS,IAAEG,OAI/B,C","sources":["Pages/Home/Home.styled.js","Pages/Home/Home.jsx"],"sourcesContent":["import styled from 'styled-components';\n\n//main container\nexport const FormContainer = styled.form`\n  /* background-color: #abaad8; */\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  font-size: 20px;\n`;\n\nexport const Button = styled.button`\n  background-color: #46ad76;\n  width: 150px;\n  height: 40px;\n  border-radius: 5px;\n`;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Klener from '../../Files/Clener.json';\nimport Olomouc from '../../Files/Clener.json';\nimport Živný from '../../Files/Clener.json';\nimport { FormContainer, Button } from './Home.styled';\n\nconst Home = () => {\n  const [selectedOption1, setSelectedOption1] = useState('');\n  const [selectedOption2, setSelectedOption2] = useState('');\n  const dispatch = useDispatch();\n  const elements = useSelector(state => state.selectedOption1);\n  const elements2 = useSelector(state => state.selectedOption2);\n  const elements3 = useSelector(state => state.questions);\n  console.log('state-slice', elements3);\n\n  const handleOption1Change = event => {\n    setSelectedOption1(event.target.value);\n  };\n\n  const handleOption2Change = event => {\n    setSelectedOption2(event.target.value);\n  };\n\n  const generateTests = (one, two) => {\n    let selectedFile;\n    switch (one) {\n      case 'Klener':\n        selectedFile = Klener;\n        break;\n      case 'Olomouc':\n        selectedFile = Olomouc;\n        break;\n      case 'Živný':\n        selectedFile = Živný;\n        break;\n      default:\n        selectedFile = Klener;\n    }\n\n    const number = [];\n    const selectedNamesArray = [];\n\n    // Generate 3 random numbers\n    while (number.length < two) {\n      const randomNum = Math.floor(Math.random() * selectedFile.length);\n      if (!number.includes(randomNum)) {\n        number.push(randomNum);\n      }\n    }\n\n    // Push names corresponding to the generated numbers\n    for (const num of number) {\n      selectedNamesArray.push(selectedFile[num]);\n    }\n\n    return selectedNamesArray;\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const myTests = generateTests(selectedOption1, selectedOption2);\n    dispatch({\n      type: 'ADD_OPTIONS',\n      payload: { selectedOption1, selectedOption2, myTests },\n    });\n  };\n\n  return (\n    <FormContainer onSubmit={handleSubmit}>\n      <div>\n        <label htmlFor=\"select1\">Выбери базу</label>\n        <select\n          id=\"select1\"\n          value={selectedOption1}\n          onChange={handleOption1Change}\n        >\n          <option value=\"Klener\">Klener</option>\n          <option value=\"Olomouc\">Olomouc</option>\n          <option value=\"Živný\">Živný</option>\n        </select>\n      </div>\n      <div>\n        <label htmlFor=\"select2\">Выбери количество тестов</label>\n        <select\n          id=\"select2\"\n          value={selectedOption2}\n          onChange={handleOption2Change}\n        >\n          <option value=\"10\">10</option>\n          <option value=\"25\">25</option>\n          <option value=\"50\">50</option>\n        </select>\n      </div>\n      <Button type=\"submit\">Выбрать</Button>\n      {elements3.length > 0 && <Link to={'/tests'}>Начать !</Link>}\n      <div>\n        Ты выбрал -{elements},{elements2}\n      </div>\n    </FormContainer>\n  );\n};\n\nexport default Home;\n"],"names":["FormContainer","styled","_templateObject","_taggedTemplateLiteral","Button","_templateObject2","_useState","useState","_useState2","_slicedToArray","selectedOption1","setSelectedOption1","_useState3","_useState4","selectedOption2","setSelectedOption2","dispatch","useDispatch","elements","useSelector","state","elements2","elements3","questions","console","log","_jsxs","onSubmit","event","preventDefault","myTests","one","two","selectedFile","Klener","number","selectedNamesArray","length","randomNum","Math","floor","random","includes","push","_i","_number","num","generateTests","type","payload","children","_jsx","htmlFor","id","value","onChange","target","Link","to"],"sourceRoot":""}