{"version":3,"file":"static/js/954.50268bbe.chunk.js","mappings":"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","sources":["Pages/Tests/Tests.styled.js","Pages/Tests/Tests.jsx"],"sourcesContent":["import styled from 'styled-components';\n\n//main container\nexport const FormTest = styled.div`\n  /* background-color: #abaad8; */\n`;\n\nexport const FormText = styled.h2`\n  margin-bottom: 40px;\n`;\n\nexport const ContainerCheck = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  margin-bottom: 20px;\n`;\n\nexport const Button = styled.button`\n  background-color: var(--iq-primary);\n  width: 150px;\n  height: 50px;\n  border-radius: 10px;\n  margin-bottom: 20px;\n`;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FormTest, FormText, ContainerCheck, Button } from './Tests.styled';\n\nconst Tests = () => {\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [selectedAnswers, setSelectedAnswers] = useState([]);\n  const [correctCount, setCorrectCount] = useState(0);\n  const [count, setCount] = useState(1);\n  const [myCorrectAnswers, setMyCorrectAnswers] = useState([]); // Хранение правильных ответов\n\n  const dispatch = useDispatch();\n\n  const questions = useSelector(state => state.testsReducer.questions);\n  const questions1 = useSelector(state => state);\n  const handleAnswerSelect = answer => {\n    if (selectedAnswers.includes(answer)) {\n      setSelectedAnswers(\n        selectedAnswers.filter(selected => selected !== answer)\n      );\n    } else {\n      setSelectedAnswers([...selectedAnswers, answer]);\n    }\n  };\n\n  const handleNextQuestion = () => {\n    setCount(count + 1);\n\n    let correctAnswersCount = 0;\n\n    questions[currentQuestion].correctAnswers.forEach(correctAnswer => {\n      if (selectedAnswers.includes(correctAnswer)) {\n        // Добавление правильного ответа в myCorrectAnswers\n        setMyCorrectAnswers(prevAnswers => [\n          ...prevAnswers,\n          {\n            topic: questions[currentQuestion].topic,\n            book: questions[currentQuestion].book,\n            answers: questions[currentQuestion].answers,\n            question: questions[currentQuestion].question,\n            correctAnswers: questions[currentQuestion].correctAnswers,\n          },\n        ]);\n        correctAnswersCount++;\n      }\n    });\n\n    setCorrectCount(\n      correctCount +\n        (correctAnswersCount ===\n        questions[currentQuestion].correctAnswers.length\n          ? 1\n          : 0)\n    );\n\n    if (currentQuestion < questions.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n    } else {\n      console.log(myCorrectAnswers);\n      console.log(count);\n      console.log(questions.length + 1);\n\n      if (count === questions.length) {\n        dispatch({\n          type: 'ADD_RIGHTQUESTIONS',\n          payload: { myCorrectAnswers },\n        });\n\n        console.log(questions1);\n      }\n\n      alert(`Правильных ответов - ${correctCount} из ${questions.length}`);\n    }\n\n    setSelectedAnswers([]);\n  };\n\n  return (\n    <FormTest>\n      <FormText>{questions[currentQuestion].question}</FormText>\n      {questions[currentQuestion].answers.map((answer, index) => (\n        <ContainerCheck key={index}>\n          <input\n            type=\"checkbox\"\n            checked={selectedAnswers.includes(answer)}\n            onChange={() => handleAnswerSelect(answer)}\n            style={{\n              width: '20px',\n              height: '20px',\n            }}\n          />\n          <label>{answer}</label>\n        </ContainerCheck>\n      ))}\n\n      {count <= questions.length ? (\n        <div>\n          <Button onClick={handleNextQuestion}>Next Question</Button>\n          <span>\n            {count} из {questions.length}\n          </span>\n        </div>\n      ) : (\n        <div>123</div>\n      )}\n    </FormTest>\n  );\n};\n\nexport default Tests;\n"],"names":["FormTest","styled","_templateObject","_taggedTemplateLiteral","FormText","_templateObject2","ContainerCheck","_templateObject3","Button","_templateObject4","_useState","useState","_useState2","_slicedToArray","currentQuestion","setCurrentQuestion","_useState3","_useState4","selectedAnswers","setSelectedAnswers","_useState5","_useState6","correctCount","setCorrectCount","_useState7","_useState8","count","setCount","_useState9","_useState10","myCorrectAnswers","setMyCorrectAnswers","dispatch","useDispatch","questions","useSelector","state","testsReducer","questions1","_jsxs","children","_jsx","question","answers","map","answer","index","type","checked","includes","onChange","filter","selected","concat","_toConsumableArray","handleAnswerSelect","style","width","height","length","onClick","correctAnswersCount","correctAnswers","forEach","correctAnswer","prevAnswers","topic","book","console","log","payload","alert"],"sourceRoot":""}