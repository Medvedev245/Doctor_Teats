{"version":3,"file":"static/js/3.d991a3d3.chunk.js","mappings":"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","sources":["Pages/Tests/Tests.jsx","Pages/Tests/Tests.styled.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FormTest, FormText, ContainerCheck, Button } from './Tests.styled';\nimport { Link } from 'react-router-dom';\n\nconst Tests = () => {\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [selectedAnswers, setSelectedAnswers] = useState([]);\n  const [correctCount, setCorrectCount] = useState(0);\n  const [count, setCount] = useState(1);\n  const [myCorrectAnswers, setMyCorrectAnswers] = useState([]); // Хранение правильных ответов\n\n  const dispatch = useDispatch();\n\n  const questions = useSelector(state => state.testsReducer.questions);\n\n  const handleAnswerSelect = answer => {\n    if (selectedAnswers.includes(answer)) {\n      setSelectedAnswers(\n        selectedAnswers.filter(selected => selected !== answer)\n      );\n    } else {\n      setSelectedAnswers([...selectedAnswers, answer]);\n    }\n  };\n\n  const handleNextQuestion = () => {\n    setCount(count + 1);\n\n    let correctAnswersCount = 0;\n\n    questions[currentQuestion].correctAnswers.forEach(correctAnswer => {\n      if (selectedAnswers.includes(correctAnswer)) {\n        // Добавление правильного ответа в myCorrectAnswers\n        setMyCorrectAnswers(prevAnswers => [\n          ...prevAnswers,\n          {\n            topic: questions[currentQuestion].topic,\n            book: questions[currentQuestion].book,\n            answers: questions[currentQuestion].answers,\n            question: questions[currentQuestion].question,\n            correctAnswers: questions[currentQuestion].correctAnswers,\n          },\n        ]);\n        correctAnswersCount++;\n      }\n    });\n\n    setCorrectCount(\n      correctCount +\n        (correctAnswersCount ===\n        questions[currentQuestion].correctAnswers.length\n          ? 1\n          : 0)\n    );\n\n    if (currentQuestion < questions.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n    } else {\n      console.log(myCorrectAnswers);\n      console.log(count);\n      console.log(questions.length + 1);\n\n      if (count === questions.length) {\n        dispatch({\n          type: 'ADD_RIGHTQUESTIONS',\n          payload: { myCorrectAnswers },\n        });\n      }\n\n      alert(`Правильных ответов - ${correctCount} из ${questions.length}`);\n    }\n\n    setSelectedAnswers([]);\n  };\n\n  return (\n    <FormTest>\n      <FormText>{questions[currentQuestion].question}</FormText>\n      {questions[currentQuestion].answers.map((answer, index) => (\n        <ContainerCheck key={index}>\n          <input\n            type=\"checkbox\"\n            checked={selectedAnswers.includes(answer)}\n            onChange={() => handleAnswerSelect(answer)}\n            style={{\n              width: '20px',\n              height: '20px',\n            }}\n          />\n          <label>{answer}</label>\n        </ContainerCheck>\n      ))}\n\n      {count <= questions.length ? (\n        <div>\n          <Button onClick={handleNextQuestion}>Next Question</Button>\n          <span>\n            {count} из {questions.length}\n          </span>\n        </div>\n      ) : (\n        <div>\n          <Link to=\"/AnsweredQuestions\">Перейти к розбору тестов</Link>\n          <Link to=\"/\">На Главную</Link>\n        </div>\n      )}\n    </FormTest>\n  );\n};\n\nexport default Tests;\n","import styled from 'styled-components';\n\n//main container\nexport const FormTest = styled.div`\n  /* background-color: #abaad8; */\n`;\n\nexport const FormText = styled.h2`\n  margin-bottom: 40px;\n`;\n\nexport const ContainerCheck = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  margin-bottom: 20px;\n`;\n\nexport const Button = styled.button`\n  background-color: var(--iq-primary);\n  width: 150px;\n  height: 50px;\n  border-radius: 10px;\n  margin-bottom: 20px;\n`;\n"],"names":["_useState","useState","_useState2","_slicedToArray","currentQuestion","setCurrentQuestion","_useState3","_useState4","selectedAnswers","setSelectedAnswers","_useState5","_useState6","correctCount","setCorrectCount","_useState7","_useState8","count","setCount","_useState9","_useState10","myCorrectAnswers","setMyCorrectAnswers","dispatch","useDispatch","questions","useSelector","state","testsReducer","_jsxs","FormTest","children","_jsx","FormText","question","answers","map","answer","index","ContainerCheck","type","checked","includes","onChange","filter","selected","concat","_toConsumableArray","handleAnswerSelect","style","width","height","length","Button","onClick","correctAnswersCount","correctAnswers","forEach","correctAnswer","prevAnswers","topic","book","console","log","payload","alert","Link","to","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","_templateObject4"],"sourceRoot":""}