{"version":3,"file":"static/js/452.7d2dbeb3.chunk.js","mappings":"6JAAA,MA+FA,EA/FkBA,KAChB,MA4DMC,EA7BYC,IACTA,EAAK,GACTC,MAAM,eACNC,QAAOC,GAAQA,EAAKC,SACpBC,KAAIF,IACH,MAAOG,KAAaC,GAAWJ,EAC5BF,MAAM,MACNI,KAAIG,GAAQA,EAAKJ,SACdK,EAAeF,EAAQF,KAAIK,GAAUA,EAAON,SAC5CO,EAAUF,EACbJ,KAAIO,GAAMA,EAAGX,MAAM,KAAKY,MAAM,GAAGC,KAAK,KAAKV,SAC3CF,QAAOF,GAAiB,KAATA,IAKZe,EAHUN,EAAaP,QAAOc,GAAQA,EAAKC,SAAS,QAG/BZ,KAAIO,GAAMA,EAAGM,QAAQ,kBAAmB,MAGnE,OAFAC,QAAQC,IAAIL,GAEL,CACLT,WACAe,QAASV,EACTW,KAAM,CAAC,UACPC,MAAO,CAAC,aACRC,eAAgBT,EACjB,IAIQU,CA5DF,CAAC,uwCA+Dd,OAFAN,QAAQC,IAAIrB,IAGV2B,EAAAA,EAAAA,KAAA,OAAAC,SACG5B,EAAO6B,OAAS,IACfF,EAAAA,EAAAA,KAAA,MAAAC,SACG5B,EAAOM,KAAI,CAACO,EAAIiB,KACfC,EAAAA,EAAAA,MAAA,MAAgBC,MAAO,CAAEC,UAAW,QAASL,SAAA,EAC3CG,EAAAA,EAAAA,MAAA,OAAAH,SAAA,CACG,IAAI,gBAAcf,EAAGN,SAAS,SAGjCwB,EAAAA,EAAAA,MAAA,OAAAH,SAAA,CAAK,eAEFf,EAAGS,QAAQhB,KAAIO,IACdkB,EAAAA,EAAAA,MAAA,OAAAH,SAAA,CAAK,IAAEf,EAAG,UACT,SAGLkB,EAAAA,EAAAA,MAAA,OAAAH,SAAA,CAAK,aAAWf,EAAGU,KAAK,UACxBQ,EAAAA,EAAAA,MAAA,OAAAH,SAAA,CAAK,cAAYf,EAAGW,MAAM,UAC1BO,EAAAA,EAAAA,MAAA,OAAAH,SAAA,CAAK,uBACkBf,EAAGY,eAAeV,KAAK,QAAQ,KAAG,SAEzDY,EAAAA,EAAAA,KAAA,WAjBOG,QAsBX,EC5BV,EA3DiBI,KAYbH,EAAAA,EAAAA,MAAAI,EAAAA,SAAA,CAAAP,SAAA,EACED,EAAAA,EAAAA,KAAC5B,EAAS,KAsBVgC,EAAAA,EAAAA,MAAA,QAAMK,SA5BWC,IACnBA,EAAMC,iBACNlB,QAAQmB,IAAIF,EAAMG,OAAO,EA0BMZ,SAAA,EAC3BG,EAAAA,EAAAA,MAAA,OAAAH,SAAA,EACED,EAAAA,EAAAA,KAAA,SAAOc,QAAQ,OAAMb,SAAC,iBACtBG,EAAAA,EAAAA,MAAA,UAAQW,KAAK,OAAOC,GAAG,OAAMf,SAAA,EAC3BD,EAAAA,EAAAA,KAAA,UAAQiB,MAAM,MAAKhB,SAAC,SACpBD,EAAAA,EAAAA,KAAA,UAAQiB,MAAM,IAAGhB,SAAC,OAClBD,EAAAA,EAAAA,KAAA,UAAQiB,MAAM,IAAGhB,SAAC,aAGtBG,EAAAA,EAAAA,MAAA,OAAAH,SAAA,EACED,EAAAA,EAAAA,KAAA,SAAOc,QAAQ,QAAOb,SAAC,iBACvBG,EAAAA,EAAAA,MAAA,UAAQW,KAAK,QAAQC,GAAG,QAAOf,SAAA,EAC7BD,EAAAA,EAAAA,KAAA,UAAQiB,MAAM,MAAKhB,SAAC,SACpBD,EAAAA,EAAAA,KAAA,UAAQiB,MAAM,IAAGhB,SAAC,OAClBD,EAAAA,EAAAA,KAAA,UAAQiB,MAAM,IAAGhB,SAAC,aAGtBD,EAAAA,EAAAA,KAAA,UAAQkB,KAAK,SAAQjB,SAAC,eAExBD,EAAAA,EAAAA,KAAA,OAAAC,SAAK,e","sources":["Files/Functions.jsx","Pages/AllTests/AllTests.jsx"],"sourcesContent":["const Functions = () => {\n  const text = [\n    `31.20. Po podávání spazmolytik zvláště parenterální cestou se může objevit u pacienta zejména\n    A}{a) akutní retence moči\n    A}{b) porucha vizu\n    1 c) zhoršení dechu\n    1 d) nevolnost se zvracením\n    31.21. Atropin bychom neměli nikdy podat u\n    1 a) chronické exacerbované bronchitidy\n    1 b) městnavého srdečního selhání\n    1 c) ischemické choroby dolních končetin s klaudikacemi\n    A}{d) zeleného zákalu (glaukomu)\n    31.22. Při chronickém podávání glukokortikoidů musíme počítat se vznikem\n    A}{a) hypokaliémie\n    1 b) hypersekrece HCl v žaludku\n    A}{c) poruchy glukózové tolerance\n    1 d) spazmu dýchacích cest\n    39.38. Úbytek funkčních buněk v sinoatriálním uzlu může po 75. roce věku činit až\n    1 a) 60 %\n    1 b) 20 %\n    A}{c) 80 %\n    1 d) 40 %\n    36.74. Mezi peroxisomální onemocnění patří\n    A}{a) X-vázaná adrenoleukodystrofie\n    A}{b) Zellwegerův (cerebrohepatorenální) syndrom\n    1 c) Reyův (cerebrohepatální) syndrom\n    A}{d) Refsumova nemoc\n\n          `,\n  ];\n\n  //1 возвращает вопрос и ответы сначала поменять на }{\n  const parseText = text => {\n    return text[0]\n      .split(/\\d+\\.\\d+\\. /)\n      .filter(item => item.trim())\n      .map(item => {\n        const [question, ...options] = item\n          .split('\\n')\n          .map(line => line.trim());\n        const optionsArray = options.map(option => option.trim());\n        const newText = optionsArray\n          .map(el => el.split(')').slice(1).join(')').trim())\n          .filter(text => text !== ''); // Фильтруем пустые строки;\n        // console.log(newText);\n        const answers = optionsArray.filter(elem => elem.includes('}{'));\n        // console.log(answers);\n\n        const newAnswers = answers.map(el => el.replace(/^A}\\{[a-z]\\)\\s*/, ''));\n        console.log(newAnswers);\n\n        return {\n          question,\n          answers: newText,\n          book: ['Klener'], // Пример значения для поля \"book\"\n          topic: ['Geriatrie'], // Пример значения для поля \"topic\"\n          correctAnswers: newAnswers, // Массив с правильными ответами\n        };\n      });\n  };\n\n  const result = parseText(text);\n  console.log(result);\n\n  return (\n    <div>\n      {result.length > 0 && (\n        <ul>\n          {result.map((el, index) => (\n            <li key={index} style={{ listStyle: 'none' }}>\n              <div>\n                {'{'}\"question\": \"{el.question}\",\n              </div>\n\n              <div>\n                \"answers\": [\n                {el.answers.map(el => (\n                  <div>\"{el}\",</div>\n                ))}\n                ],\n              </div>\n              <div>\"book\": [\"{el.book}\"],</div>\n              <div>\"topic\": [\"{el.topic}\"],</div>\n              <div>\n                \"correctAnswers\": [\"{el.correctAnswers.join('\", \"')}\"]{'},'}\n              </div>\n              <br />\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Functions;\n","// import { useState } from 'react';\n// import Klener from '../../Files/Clener.json';\nimport Functions from '../../Files/Functions';\n\nconst AllTests = () => {\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [allTests, setAllTests] = useState('');\n  //   const [allTests, setAllTests] = useState(Klener);\n  //   const [allTests, setAllTests] = useState(Klener);\n  //   console.log(allTests);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.dir(event.target);\n  };\n  return (\n    <>\n      <Functions />\n      {/* <div>\n          <ul>\n            {allTests.map((test, index) => {\n              return (\n                <li key={index} style={{ marginBottom: '25px' }}>\n                  <span>Вопрос</span>\n                  <p>{test.question}</p>\n                  <ul>\n                    {test.answers.map(el => {\n                      <span>Ответ</span>;\n                      return <li>{el}</li>;\n                    })}\n                  </ul>\n\n                  <span></span>\n                </li>\n              );\n            })}\n          </ul>\n        </div> */}\n\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"base\">select base</label>\n          <select name=\"base\" id=\"base\">\n            <option value=\"All\">All</option>\n            <option value=\"1\">1</option>\n            <option value=\"2\">2</option>\n          </select>\n        </div>\n        <div>\n          <label htmlFor=\"topic\">select base</label>\n          <select name=\"topic\" id=\"topic\">\n            <option value=\"All\">All</option>\n            <option value=\"1\">1</option>\n            <option value=\"2\">2</option>\n          </select>\n        </div>\n        <button type=\"submit\">fdvedv</button>\n      </form>\n      <div>AllTests</div>\n    </>\n  );\n};\n\nexport default AllTests;\n"],"names":["Functions","result","text","split","filter","item","trim","map","question","options","line","optionsArray","option","newText","el","slice","join","newAnswers","elem","includes","replace","console","log","answers","book","topic","correctAnswers","parseText","_jsx","children","length","index","_jsxs","style","listStyle","AllTests","_Fragment","onSubmit","event","preventDefault","dir","target","htmlFor","name","id","value","type"],"sourceRoot":""}