{"version":3,"file":"static/js/867.ae508873.chunk.js","mappings":"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","sources":["components/Modal/Modal.styled.js","components/Modal/Modal.jsx","Pages/Tests/Tests.jsx","Pages/Tests/Tests.styled.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ModalContainer = styled.div`\n  height: 100vh;\n  width: 100vw;\n\n  background-color: rgba(0, 0, 0, 0.7);\n  backdrop-filter: blur(5px);\n  position: fixed;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  top: 0;\n  left: 0;\n  overflow: hidden;\n`;\n\nexport const ModalContent = styled.div`\n  padding: 60px 30px 0 30px;\n  border-radius: 12px;\n  background-color: wheat;\n  width: 75%;\n  height: 500px;\n  position: fixed; /* Фиксированная позиция */\n  overflow: auto; /* Разрешить прокрутку при необходимости */\n`;\n","import React from 'react';\n\nimport { ModalContainer, ModalContent } from './Modal.styled';\n\nconst Modal = ({ active, setActive, closeModal, props }) => {\n  console.log(props);\n  return (\n    <>\n      {active && (\n        <ModalContainer onClick={() => closeModal(false)}>\n          <ModalContent onClick={e => e.stopPropagation()}>\n            <h2>{props.question}</h2>\n            <p>{props.description}</p>\n            <img src={props.img} alt={props.question} />\n          </ModalContent>\n        </ModalContainer>\n      )}\n    </>\n  );\n};\n\nexport default Modal;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  FormTest,\n  FormText,\n  ContainerCheck,\n  Button,\n  LinkContainer,\n  LinkToPage,\n  AnswerControl,\n  AnswerBlock,\n} from './Tests.styled';\nimport Modal from '../../components/Modal/Modal';\n\nconst Tests = () => {\n  const [modalActive, setModalActive] = useState(false);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [selectedAnswers, setSelectedAnswers] = useState([]);\n  const [correctCount, setCorrectCount] = useState(0);\n  const [count, setCount] = useState(1);\n  const [myCorrectAnswers, setMyCorrectAnswers] = useState([]); // Хранение правильных ответов\n  const [addColor, setAddColor] = useState(false); // Состояние для подсветки правильных ответов\n\n  const dispatch = useDispatch();\n  const questions = useSelector(state => state.testsReducer.questions);\n\n  const handleAnswerSelect = answer => {\n    if (selectedAnswers.includes(answer)) {\n      setSelectedAnswers(\n        selectedAnswers.filter(selected => selected !== answer)\n      );\n    } else {\n      setSelectedAnswers([...selectedAnswers, answer]);\n    }\n  };\n\n  const comparison = () => {\n    setAddColor(prevState => !prevState); // Изменяем состояние для подсветки при каждом нажатии\n  };\n\n  const handleNextQuestion = () => {\n    setAddColor(false);\n    setCount(count + 1);\n\n    let correctAnswersCount = 0;\n\n    questions[currentQuestion].correctAnswers.forEach(correctAnswer => {\n      if (selectedAnswers.includes(correctAnswer)) {\n        setMyCorrectAnswers(prevAnswers => [\n          ...prevAnswers,\n          {\n            topic: questions[currentQuestion].topic,\n            book: questions[currentQuestion].book,\n            answers: questions[currentQuestion].answers,\n            question: questions[currentQuestion].question,\n            correctAnswers: questions[currentQuestion].correctAnswers,\n          },\n        ]);\n        correctAnswersCount++;\n      }\n    });\n\n    setCorrectCount(\n      correctCount +\n        (correctAnswersCount ===\n        questions[currentQuestion].correctAnswers.length\n          ? 1\n          : 0)\n    );\n\n    if (currentQuestion < questions.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n    } else {\n      if (count === questions.length) {\n        dispatch({\n          type: 'ADD_RIGHTQUESTIONS',\n          payload: { myCorrectAnswers },\n        });\n      }\n\n      alert(`Правильных ответов - ${correctCount} из ${questions.length}`);\n    }\n\n    setSelectedAnswers([]);\n  };\n\n  const openModal = () => {\n    setModalActive(true);\n    document.body.style.overflow = 'hidden';\n  };\n\n  const closeModal = () => {\n    setModalActive(false);\n    document.body.style.overflow = 'auto';\n  };\n\n  return (\n    <FormTest>\n      <FormText>{questions[currentQuestion].question}</FormText>\n      {questions[currentQuestion].answers.map((answer, index) => (\n        <ContainerCheck\n          key={index}\n          style={{\n            backgroundColor:\n              addColor &&\n              questions[currentQuestion].correctAnswers.includes(answer)\n                ? '#1fa01f6f'\n                : '',\n          }}\n        >\n          <input\n            type=\"checkbox\"\n            checked={selectedAnswers.includes(answer)}\n            onChange={() => handleAnswerSelect(answer)}\n            style={{ width: '20px', height: '20px' }}\n          />\n          <label>{answer}</label>\n        </ContainerCheck>\n      ))}\n      <button onClick={openModal}>Показать описание</button>\n      {/* <span>{questions[currentQuestion].img}</span>\n      <img\n        src={questions[currentQuestion].img}\n        alt=\"myPhoto\"\n        width={150}\n        height={150}\n      /> */}\n\n      {count <= questions.length ? (\n        <AnswerBlock>\n          <AnswerControl>\n            <Button onClick={handleNextQuestion}>Next Question</Button>\n            <span>\n              {count} из {questions.length}\n            </span>\n          </AnswerControl>\n          <Button onClick={comparison}>Check</Button>\n        </AnswerBlock>\n      ) : (\n        <LinkContainer>\n          <LinkToPage to=\"/AnsweredQuestions\">\n            Перейти к разбору тестов\n          </LinkToPage>\n          <LinkToPage to=\"/\">На Главную</LinkToPage>\n        </LinkContainer>\n      )}\n      <Modal\n        active={modalActive}\n        setActive={setModalActive}\n        closeModal={closeModal}\n        props={questions[currentQuestion]}\n      />\n    </FormTest>\n  );\n};\n\nexport default Tests;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\n//main container\nexport const FormTest = styled.div`\n  /* background-color: #abaad8; */\n`;\n\nexport const FormText = styled.h2`\n  margin-bottom: 40px;\n`;\n\nexport const ContainerCheck = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  margin-bottom: 20px;\n`;\n\n// Общая кнопка\nexport const Button = styled.button`\n  color: black;\n  font-weight: 500;\n  background-color: var(--iq-primary);\n  width: 150px;\n  height: 50px;\n  border-radius: 10px;\n  /* margin-bottom: 20px; */\n  transition: background-color 0.3s ease;\n  &:active {\n    background: var(--iq-secondary);\n  }\n`;\n\nexport const LinkContainer = styled.div`\n  width: 200px;\n  margin-top: 50px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 20px;\n`;\n\n// Общая ссылка\nexport const LinkToPage = styled(Link)`\n  border-radius: 4px;\n  text-decoration: none;\n  &:hover {\n    background: var(--iq-primary);\n  }\n`;\n\nexport const AnswerBlock = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const AnswerControl = styled.div`\n  display: flex;\n  gap: 20px;\n  align-items: center;\n`;\n"],"names":["ModalContainer","styled","_templateObject","_taggedTemplateLiteral","ModalContent","_templateObject2","_ref","active","setActive","closeModal","props","console","log","_jsx","_Fragment","children","onClick","_jsxs","e","stopPropagation","question","description","src","img","alt","Tests","modalActive","setModalActive","useState","currentQuestion","setCurrentQuestion","selectedAnswers","setSelectedAnswers","correctCount","setCorrectCount","count","setCount","myCorrectAnswers","setMyCorrectAnswers","addColor","setAddColor","dispatch","useDispatch","questions","useSelector","state","testsReducer","FormTest","FormText","answers","map","answer","index","ContainerCheck","style","backgroundColor","correctAnswers","includes","type","checked","onChange","filter","selected","handleAnswerSelect","width","height","openModal","document","body","overflow","length","AnswerBlock","AnswerControl","Button","handleNextQuestion","correctAnswersCount","forEach","correctAnswer","prevAnswers","topic","book","payload","alert","concat","comparison","prevState","LinkContainer","LinkToPage","to","Modal","_templateObject3","_templateObject4","_templateObject5","Link","_templateObject6","_templateObject7","_templateObject8"],"sourceRoot":""}