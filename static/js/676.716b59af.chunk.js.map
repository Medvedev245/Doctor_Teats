{"version":3,"file":"static/js/676.716b59af.chunk.js","mappings":"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","sources":["components/LoadMore/LoadMore.styled.js","components/LoadMore/LoadMore.jsx","Pages/AllTests/AllTests.jsx","components/Modal/Modal.styled.js","components/Modal/Modal.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const BtnContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 15px;\n`;\n\nexport const BtnLoadMore = styled.button`\n  width: 250px;\n  height: 50px;\n  cursor: pointer;\n  border: 3px solid #fff;\n  border-radius: 10px;\n\n  font-weight: 500;\n  font-size: 24px;\n  color: var(--iq-light-primary);\n  /* border-radius: 4px; */\n  background: var(--iq-title-text);\n`;\n","import { BtnContainer } from './LoadMore.styled';\nimport Pagination from '@mui/material/Pagination';\nimport Stack from '@mui/material/Stack';\n\nconst LoadMore = ({ currentPage, testsPerPage, totalTests, onPageChange }) => {\n  const numPages = Math.ceil(totalTests / testsPerPage);\n\n  const handlePageChange = (event, newPage) => {\n    onPageChange(event, newPage);\n    window.scrollTo({ top: 0, behavior: 'smooth' }); // Прокрутка страницы в начало\n  };\n\n  return (\n    <BtnContainer>\n      <Stack spacing={2}>\n        <Pagination\n          count={numPages}\n          color=\"primary\"\n          size=\"large\"\n          page={currentPage}\n          onChange={handlePageChange} // Обработчик события с прокруткой в начало\n        />\n      </Stack>\n    </BtnContainer>\n  );\n};\n\nexport default LoadMore;\n","import { useState } from 'react';\nimport Medicine_2023 from '../../Files/Medicine_2023.json';\nimport Klener from '../../Files/ClenerNew.json';\nimport Legislativa from '../../Files/Legislativa_Báze_2023.json';\nimport Živný from '../../Files/Živný.json';\n\nimport {\n  Element,\n  Item,\n  List,\n  ListQuestion,\n  Question,\n  Select,\n  SpanElemet,\n  TopicContainer,\n} from './AllTests.styled';\nimport LoadMore from 'components/LoadMore/LoadMore';\nimport { FormContainer, WraperForm } from 'Pages/Home/Home.styled';\nimport { ButtonDescr } from 'Pages/Tests/Tests.styled';\nimport Modal from 'components/Modal/Modal';\n// import Functions from 'Files/Functions';\n\nconst AllTests = () => {\n  const [allTests, setAllTests] = useState(Legislativa);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [modalActive, setModalActive] = useState(false);\n  const [selectedQuestion, setSelectedQuestion] = useState(null); // Состояние для хранения выбранного вопроса\n\n  const storedCollection = localStorage.getItem('myCollection');\n  let collection = [];\n  if (storedCollection) {\n    collection = JSON.parse(storedCollection);\n  }\n  console.log(collection);\n\n  const testsPerPage = 30; // Количество тестов на странице\n\n  const renderAnswer = (answer, isCorrect) => {\n    return isCorrect ? (\n      <span style={{ backgroundColor: '#1fa01f6f' }}>{answer}</span>\n    ) : (\n      <span>{answer}</span>\n    );\n  };\n\n  const handleOption1Change = event => {\n    const selectedValue = event.target.value;\n    switch (selectedValue) {\n      case 'Klener':\n        setAllTests(Klener);\n        break;\n      case 'Medicine_2023':\n        setAllTests(Medicine_2023);\n        break;\n      case 'Legislativa_Báze_2023':\n        setAllTests(Legislativa);\n        break;\n      case 'Živný':\n        setAllTests(Živný);\n        break;\n      default:\n        setAllTests(Legislativa);\n    }\n  };\n\n  const startIndex = (currentPage - 1) * testsPerPage;\n  const endIndex = startIndex + testsPerPage;\n  const visibleTests = allTests.slice(startIndex, endIndex);\n\n  const handlePageChange = (event, newPage) => {\n    setCurrentPage(newPage);\n  };\n\n  const openModal = question => {\n    // Передаем вопрос в функцию openModal\n    setSelectedQuestion(question); // Устанавливаем выбранный вопрос\n    setModalActive(true);\n    document.body.style.overflow = 'hidden';\n  };\n\n  const closeModal = () => {\n    setModalActive(false);\n    document.body.style.overflow = 'auto';\n  };\n\n  const addToFavorite = test => {\n    const isAlreadyAdded = collection.some(\n      item => item.question === test.question\n    );\n    console.log(isAlreadyAdded);\n    if (isAlreadyAdded) {\n      return;\n    }\n    collection.push(test);\n    localStorage.setItem('myCollection', JSON.stringify(collection));\n  };\n\n  return (\n    <>\n      <FormContainer action=\"formBase\">\n        <WraperForm>\n          <label htmlFor=\"formBase\">Vyberte testy</label>\n          <Select id=\"formBase\" onChange={handleOption1Change}>\n            <option value=\"Legislativa_Báze_2023\">Legislativa_Báze_2023</option>\n            <option value=\"Klener\">Klener</option>\n            <option value=\"Živný\">Živný(1-731)</option>\n            <option value=\"Medicine_2023\">Medicine_2023</option>\n          </Select>\n        </WraperForm>\n      </FormContainer>\n      <div>\n        <List>\n          {visibleTests.map((test, index) => (\n            <Item key={index}>\n              <TopicContainer>\n                <SpanElemet>Book: {test.book}</SpanElemet>\n                <SpanElemet>Topic: {test.topic}</SpanElemet>\n              </TopicContainer>\n\n              <Question>{test.question}</Question>\n              <ListQuestion>\n                {test.answers.map((answer, answerIndex) => (\n                  <Element key={answerIndex}>\n                    {renderAnswer(answer, test.correctAnswers.includes(answer))}\n                  </Element>\n                ))}\n              </ListQuestion>\n\n              {test.description && (\n                <ButtonDescr\n                  style={{ alignSelf: 'flex-end' }}\n                  onClick={() => openModal(test)}\n                >\n                  Show Description\n                </ButtonDescr>\n              )}\n              <button onClick={e => addToFavorite(test)}>here</button>\n            </Item>\n          ))}\n        </List>\n      </div>\n      <LoadMore\n        currentPage={currentPage}\n        testsPerPage={testsPerPage}\n        totalTests={allTests.length}\n        onPageChange={handlePageChange}\n      />\n      <Modal\n        active={modalActive}\n        setActive={setModalActive}\n        closeModal={closeModal}\n        props={selectedQuestion} // Передаем выбранный вопрос в компонент Modal\n      />\n      {/* <Functions></Functions> */}\n    </>\n  );\n};\n\nexport default AllTests;\n","import styled from 'styled-components';\n\nexport const ModalContainer = styled.div`\n  height: 100vh;\n  width: 100vw;\n  background-color: rgba(0, 0, 0, 0.7);\n  backdrop-filter: blur(5px);\n  position: fixed;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  top: 0;\n  left: 0;\n  overflow: hidden;\n`;\n\nexport const ModalContent = styled.div`\n  position: relative;\n  padding: 60px 15px 30px 15px;\n  border-radius: 12px;\n  background-color: var(--iq-secondary);\n  width: 75%;\n  height: 700px;\n  position: fixed; /* Фиксированная позиция */\n  overflow: auto; /* Разрешить прокрутку при необходимости */\n  @media screen and (max-width: 767px) {\n    padding: 60px 30px 30px 30px;\n    height: 550px;\n  }\n`;\n\nexport const SvgCloseBtn = styled.button`\n  position: absolute;\n  background: transparent;\n  border: none;\n  right: 14px;\n  top: 14px;\n  cursor: pointer;\n\n  svg {\n    stroke-width: 1.5px;\n    stroke: var(--iq-cross);\n    width: 20px;\n    height: 20px;\n  }\n`;\n\nexport const Text = styled.h2`\n  text-align: center;\n  margin-bottom: 15px;\n`;\n\nexport const Descr = styled.p`\n  margin-bottom: 40px;\n`;\n\nexport const Img = styled.img`\n  // Mobil\n  @media screen and (max-width: 767px) {\n    width: 235px;\n    height: 170px;\n  }\n`;\n","import React from 'react';\n\nimport {\n  Descr,\n  ModalContainer,\n  ModalContent,\n  SvgCloseBtn,\n  Text,\n  Img,\n} from './Modal.styled';\n\nconst Modal = ({ active, setActive, closeModal, props }) => {\n  return (\n    <>\n      {active && (\n        <ModalContainer onClick={() => closeModal(false)}>\n          <ModalContent onClick={e => e.stopPropagation()}>\n            <SvgCloseBtn type=\"button\" onClick={closeModal}>\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                // viewBox=\"0 0 24 24\"\n                fill=\"black\"\n                stroke=\"currentColor\"\n                strokeWidth=\"2\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              >\n                <path d=\"M6 18L18 6M6 6l12 12\" />\n              </svg>\n            </SvgCloseBtn>\n\n            <Text>{props.question}</Text>\n            <Descr>{props.description}</Descr>\n            {props.img[0] && <Img src={props.img} alt={props.question} />}\n          </ModalContent>\n        </ModalContainer>\n      )}\n    </>\n  );\n};\n\nexport default Modal;\n"],"names":["BtnContainer","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","_ref","currentPage","testsPerPage","totalTests","onPageChange","numPages","Math","ceil","_jsx","children","Stack","spacing","Pagination","count","color","size","page","onChange","handlePageChange","event","newPage","window","scrollTo","top","behavior","AllTests","allTests","setAllTests","useState","Legislativa","setCurrentPage","modalActive","setModalActive","selectedQuestion","setSelectedQuestion","storedCollection","localStorage","getItem","collection","JSON","parse","console","log","renderAnswer","answer","isCorrect","style","backgroundColor","startIndex","endIndex","visibleTests","slice","_jsxs","_Fragment","FormContainer","action","WraperForm","htmlFor","Select","id","target","value","Klener","Medicine_2023","Živný","List","map","test","index","Item","TopicContainer","SpanElemet","book","topic","Question","question","ListQuestion","answers","answerIndex","Element","correctAnswers","includes","description","ButtonDescr","alignSelf","onClick","document","body","overflow","e","isAlreadyAdded","some","item","push","setItem","stringify","addToFavorite","LoadMore","length","Modal","active","setActive","closeModal","props","ModalContainer","ModalContent","SvgCloseBtn","_templateObject3","Text","_templateObject4","Descr","_templateObject5","Img","_templateObject6","stopPropagation","type","xmlns","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","img","src","alt"],"sourceRoot":""}