{"version":3,"file":"static/js/3.e57c363c.chunk.js","mappings":"0LAkFA,UA/Ec,WAEZ,IAAAA,GAA8CC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDI,EAAeF,EAAA,GAAEG,EAAkBH,EAAA,GAE1CI,GAA8CL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAnDE,EAAeD,EAAA,GAAEE,EAAkBF,EAAA,GAC1CG,GAAwCT,EAAAA,EAAAA,UAAS,GAAEU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA5CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,GAA0Bb,EAAAA,EAAAA,UAAS,GAAEc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAA9BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAEhBG,GAAYC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,SAAS,IAiDtD,OACEG,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAKJ,EAAUd,GAAiBoB,WAC/BN,EAAUd,GAAiBqB,QAAQC,KAAI,SAACC,EAAQC,GAAK,OACpDP,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,SACEM,KAAK,WACLC,QAAStB,EAAgBuB,SAASJ,GAClCK,SAAU,kBAvDO,SAAAL,GACrBnB,EAAgBuB,SAASJ,GAC3BlB,EACED,EAAgByB,QAAO,SAAAC,GAAQ,OAAIA,IAAaP,CAAM,KAGxDlB,EAAmB,GAAD0B,QAAAC,EAAAA,EAAAA,GAAK5B,GAAe,CAAEmB,IAE5C,CA+C0BU,CAAmBV,EAAO,KAE5CJ,EAAAA,EAAAA,KAAA,SAAAD,SAAQK,MANAC,EAOJ,KAGRL,EAAAA,EAAAA,KAAA,UAAQe,QAnDe,WACzBrB,EAAS,GACT,IAAIsB,EAAsB,EAe1B,GAdArB,EAAUd,GAAiBoC,eAAeC,SAAQ,SAAAC,GAC5ClC,EAAgBuB,SAASW,IAC3BH,GAEJ,IAEA1B,EACED,GACG2B,IACDrB,EAAUd,GAAiBoC,eAAeG,OACtC,EACA,IAGJvC,EAAkBc,EAAUyB,OAAS,EACvCtC,EAAmBD,EAAkB,OAChC,CACL,IAAMoC,EAAiBtB,EAAUQ,KAAI,SAAAF,GAAQ,OAC3CA,EAASgB,eAAeI,KAAK,KAAK,IAEpCC,QAAQC,IAAIN,GACZO,MAAM,6GAADZ,OACqBvB,EAAY,kBAAAuB,OAAOjB,EAAUyB,QAQzD,CACAlC,EAAmB,GACrB,EAgBwCa,SAAC,mBACrCD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CACGN,EAAM,iBAAKE,EAAUyB,YAI9B,C","sources":["Pages/Tests/Tests.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nconst Tests = () => {\n  //правельные ответы\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  //выбранный ответ\n  const [selectedAnswers, setSelectedAnswers] = useState([]);\n  const [correctCount, setCorrectCount] = useState(0);\n  const [Count, setCount] = useState(1);\n\n  const questions = useSelector(state => state.questions);\n\n  const handleAnswerSelect = answer => {\n    if (selectedAnswers.includes(answer)) {\n      setSelectedAnswers(\n        selectedAnswers.filter(selected => selected !== answer)\n      );\n    } else {\n      setSelectedAnswers([...selectedAnswers, answer]);\n    }\n  };\n\n  const handleNextQuestion = () => {\n    setCount(+1);\n    let correctAnswersCount = 0;\n    questions[currentQuestion].correctAnswers.forEach(correctAnswer => {\n      if (selectedAnswers.includes(correctAnswer)) {\n        correctAnswersCount++;\n      }\n    });\n\n    setCorrectCount(\n      correctCount +\n        (correctAnswersCount ===\n        questions[currentQuestion].correctAnswers.length\n          ? 1\n          : 0)\n    );\n\n    if (currentQuestion < questions.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n    } else {\n      const correctAnswers = questions.map(question =>\n        question.correctAnswers.join(', ')\n      );\n      console.log(correctAnswers);\n      alert(\n        `правильных ответов - ${correctCount} из ${questions.length}`\n        // `Results:\\n${questions\n        //   .map(\n        //     (question, index) =>\n        //       `${question.question}\\nCorrect answers: ${correctAnswers[index]}`\n        //   )\n        //   .join('\\n\\n')}\\n\\nTotal correct answers: ${correctCount}`\n      );\n    }\n    setSelectedAnswers([]);\n  };\n\n  return (\n    <div>\n      <h1>{questions[currentQuestion].question}</h1>\n      {questions[currentQuestion].answers.map((answer, index) => (\n        <div key={index}>\n          <input\n            type=\"checkbox\"\n            checked={selectedAnswers.includes(answer)}\n            onChange={() => handleAnswerSelect(answer)}\n          />\n          <label>{answer}</label>\n        </div>\n      ))}\n\n      <button onClick={handleNextQuestion}>Next Question</button>\n      <div>\n        {Count} из {questions.length}\n      </div>\n    </div>\n  );\n};\n\nexport default Tests;\n"],"names":["_useState","useState","_useState2","_slicedToArray","currentQuestion","setCurrentQuestion","_useState3","_useState4","selectedAnswers","setSelectedAnswers","_useState5","_useState6","correctCount","setCorrectCount","_useState7","_useState8","Count","setCount","questions","useSelector","state","_jsxs","children","_jsx","question","answers","map","answer","index","type","checked","includes","onChange","filter","selected","concat","_toConsumableArray","handleAnswerSelect","onClick","correctAnswersCount","correctAnswers","forEach","correctAnswer","length","join","console","log","alert"],"sourceRoot":""}