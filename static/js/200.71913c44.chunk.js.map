{"version":3,"file":"static/js/200.71913c44.chunk.js","mappings":"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","sources":["Pages/MyBase/MyBase.styled.js","Pages/MyBase/MyBase.jsx","components/Modal/Modal.styled.js","components/Modal/Modal.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Textbase = styled.p`\n  text-align: center;\n  font-size: 24px;\n  font-weight: 500;\n  margin-bottom: 20px;\n\n  // Mobil\n  @media screen and (max-width: 767px) {\n    font-size: 16px;\n  }\n`;\n\nexport const List = styled.ul`\n  margin-bottom: 15px;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  gap: 30px;\n  justify-content: center;\n  align-items: stretch;\n`;\n\nexport const Item = styled.li`\n  border-radius: 8px;\n  display: flex;\n  flex-direction: column;\n  font-size: 15px;\n  min-height: 290px;\n  width: 400px;\n  padding-bottom: 15px;\n  background-color: white;\n  /* margin-bottom: 15px; */\n`;\n\nexport const TopicContainer = styled.div`\n  /* background-color: var(--iq-primary); */\n  position: relative;\n  padding: 10px 15px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  gap: 5px;\n  margin-bottom: 10px;\n  /* background-color: var(--iq-primary); */\n\n  &:after {\n    content: '';\n    position: absolute;\n    bottom: -1px;\n    left: 0;\n    width: 100%;\n    height: 3px;\n    background-color: var(--iq-underlining);\n  }\n`;\n\nexport const SpanElemet = styled.span`\n  color: black;\n`;\n\nexport const Question = styled.p`\n  padding: 0 15px;\n  font-size: 18px;\n  margin-bottom: 20px;\n  font-weight: bold;\n`;\n\nexport const ListQuestion = styled.ul`\n  margin-bottom: 40px;\n  flex: 1 1 auto;\n  padding: 0 15px;\n  position: relative;\n\n  &:after {\n    content: '';\n    position: absolute;\n    bottom: -30px;\n    left: 25px;\n    width: 85%;\n    height: 3px;\n    background-color: var(--iq-underlining);\n  }\n`;\n\nexport const Element = styled.li`\n  list-style: line;\n  margin-left: 10px;\n  line-height: 1.4;\n`;\n\nexport const ButtonContainer = styled.div`\n  /* height: 60px; */\n  margin: 0 15px;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n`;\n\nexport const ButtonDescr = styled.button`\n  /* border-radius: 5px; */\n  background: none;\n  display: flex;\n  border: none;\n  width: 120px;\n  height: 50px;\n  flex-direction: column;\n  align-items: center;\n  transition: 0.3s ease; // Плавное изменение фона\n  /* border-top: 1px solid; */\n\n  /* Стили для изменения цвета иконки при наведении */\n  svg path {\n    fill: blue;\n    transition: fill 0.3s ease; // Плавное изменение цвета иконки\n  }\n\n  &:hover svg path,\n  &:focus svg path {\n    stroke: rgba(88, 5, 143, 1); // Изменение цвета иконки при наведении\n    stroke-width: 1;\n  }\n`;\n","import { useState } from 'react';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport {\n  Textbase,\n  List,\n  Item,\n  TopicContainer,\n  SpanElemet,\n  Question,\n  ListQuestion,\n  Element,\n  ButtonContainer,\n  ButtonDescr,\n} from './MyBase.styled';\nimport Modal from 'components/Modal/Modal';\n\nconst MyBase = () => {\n  const choosenBase = JSON.parse(localStorage.getItem('myCollection'));\n  const [selectedQuestion, setSelectedQuestion] = useState(null);\n  const [modalActive, setModalActive] = useState(false);\n  const [myQuestions, setMyQuestions] = useState(choosenBase || []);\n\n  const openModal = question => {\n    // Передаем вопрос в функцию openModal\n    setSelectedQuestion(question); // Устанавливаем выбранный вопрос\n    setModalActive(true);\n    document.body.style.overflow = 'hidden';\n  };\n\n  const closeModal = () => {\n    setModalActive(false);\n    document.body.style.overflow = 'auto';\n  };\n  const renderAnswer = (answer, isCorrect) => {\n    return isCorrect ? (\n      <span style={{ backgroundColor: '#1fa01f6f' }}>{answer}</span>\n    ) : (\n      <span>{answer}</span>\n    );\n  };\n  const isTestInFavorites = test => {\n    return myQuestions.some(item => item.question === test.question);\n  };\n\n  const addToFavorite = test => {\n    console.log(test);\n\n    // // Если элемент уже добавлен, то удаляем его\n\n    const updatedCollection = myQuestions.filter(\n      item => item.question !== test.question\n    );\n    setMyQuestions(updatedCollection);\n    localStorage.setItem('myCollection', JSON.stringify(updatedCollection));\n    Notify.warning('Test odstraněn z oblíbených');\n    return;\n  };\n\n  return (\n    <>\n      <Textbase>My Base</Textbase>\n      <div>\n        <List>\n          {myQuestions.map((test, idx) => (\n            <Item key={idx}>\n              <TopicContainer>\n                <SpanElemet>Книга: {test.book}</SpanElemet>\n                <SpanElemet>Тема: {test.topic}</SpanElemet>\n              </TopicContainer>\n\n              <Question>{test.question}</Question>\n              <ListQuestion>\n                {test.answers.map((answer, answerIndex) => (\n                  <Element key={answerIndex}>\n                    {renderAnswer(answer, test.correctAnswers.includes(answer))}\n                  </Element>\n                ))}\n              </ListQuestion>\n              <ButtonContainer>\n                <ButtonDescr\n                  onClick={() => openModal(test)}\n                  disabled={!test.description}\n                >\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    x=\"0px\"\n                    y=\"0px\"\n                    width=\"30\"\n                    height=\"30\"\n                    viewBox=\"0 0 100 100\"\n                  >\n                    <path d=\"M 50 16 C 38.745078 16 28.536804 19.528325 21.103516 25.289062 C 13.670227 31.0498 9 39.090825 9 48 C 9 56.843516 13.643104 64.803099 20.982422 70.556641 C 20.979022 77.17314 20.872179 82.713759 17.292969 86.292969 A 1.0001 1.0001 0 0 0 18 88 C 24.741238 88 33.13907 85.975155 38.578125 78.707031 C 42.210021 79.527556 46.031696 80 50 80 C 61.254922 80 71.463196 76.471675 78.896484 70.710938 C 86.329773 64.950199 91 56.909175 91 48 C 91 39.090825 86.329773 31.0498 78.896484 25.289062 C 71.463196 19.528325 61.254922 16 50 16 z M 50 18 C 60.836078 18 70.627913 21.410128 77.671875 26.869141 C 84.715837 32.328153 89 39.788175 89 48 C 89 56.211825 84.715837 63.671847 77.671875 69.130859 C 70.627913 74.589872 60.836078 78 50 78 C 45.963088 78 42.07133 77.527971 38.412109 76.652344 A 1.0001 1.0001 0 0 0 37.361328 77.048828 C 32.908474 83.389417 26.082467 85.468934 20.003906 85.837891 C 22.866127 81.619726 23 76.123 23 70.216797 L 23 70.140625 A 1.0001 1.0001 0 0 0 22.605469 69.345703 C 15.3982 63.868957 11 56.317715 11 48 C 11 39.788175 15.284163 32.328153 22.328125 26.869141 C 29.372087 21.410128 39.163922 18 50 18 z M 50 21 C 40.109772 21 31.134601 23.999444 24.609375 28.871094 C 18.084149 33.742743 14 40.513854 14 48 C 14 53.479972 16.189921 58.584917 19.921875 62.830078 A 0.50030972 0.50030972 0 1 0 20.673828 62.169922 C 17.075782 58.077083 15 53.214028 15 48 C 15 40.877146 18.876757 34.397976 25.207031 29.671875 C 31.537305 24.945774 40.312228 22 50 22 C 59.503691 22 68.127545 24.834788 74.427734 29.404297 A 0.50005 0.50005 0 1 0 75.015625 28.595703 C 68.523814 23.887212 59.702309 21 50 21 z M 49.5 28 C 46.495378 28 44 30.214474 44 33 C 44 35.785526 46.495378 38 49.5 38 C 52.504622 38 55 35.785526 55 33 C 55 30.214474 52.504622 28 49.5 28 z M 49.5 29 C 52.018226 29 54 30.814963 54 33 C 54 35.185037 52.018226 37 49.5 37 C 46.981774 37 45 35.185037 45 33 C 45 30.814963 46.981774 29 49.5 29 z M 76.5 29.880859 A 0.50005 0.50005 0 0 0 76.179688 30.767578 C 76.417254 30.9667 76.650339 31.169004 76.878906 31.373047 A 0.50005839 0.50005839 0 1 0 77.544922 30.626953 C 77.307489 30.414996 77.064746 30.206831 76.820312 30.001953 A 0.50005 0.50005 0 0 0 76.5 29.880859 z M 78.78125 31.994141 A 0.50005 0.50005 0 0 0 78.419922 32.847656 C 78.732508 33.170072 79.033765 33.497441 79.326172 33.830078 A 0.50030972 0.50030972 0 0 0 80.078125 33.169922 C 79.774531 32.824559 79.460133 32.485928 79.136719 32.152344 A 0.50005 0.50005 0 0 0 78.78125 31.994141 z M 80.890625 34.494141 A 0.50005 0.50005 0 0 0 80.529297 35.302734 C 83.383758 39.071094 85 43.397373 85 48 C 85 55.122854 81.123243 61.602024 74.792969 66.328125 C 68.462695 71.054226 59.687772 74 50 74 C 48.831137 74 47.676738 73.95713 46.537109 73.873047 A 0.50040144 0.50040144 0 0 0 46.462891 74.871094 C 47.627264 74.957007 48.806863 75 50 75 C 59.890228 75 68.865399 72.000556 75.390625 67.128906 C 81.915851 62.257257 86 55.486146 86 48 C 86 43.162627 84.29371 38.614906 81.326172 34.697266 A 0.50005 0.50005 0 0 0 80.941406 34.494141 A 0.50005 0.50005 0 0 0 80.890625 34.494141 z M 42.5 40 A 0.50005 0.50005 0 0 0 42 40.5 L 42 44.5 A 0.50005 0.50005 0 0 0 42.5 45 L 45.5 45 C 45.781469 45 46 45.218531 46 45.5 L 46 60.5 C 46 60.781469 45.781469 61 45.5 61 L 41.5 61 A 0.50005 0.50005 0 0 0 41 61.5 L 41 65.5 A 0.50005 0.50005 0 0 0 41.5 66 L 59.5 66 A 0.50005 0.50005 0 0 0 60 65.5 L 60 61.5 A 0.50005 0.50005 0 0 0 59.5 61 L 55.5 61 C 55.218531 61 55 60.781469 55 60.5 L 55 40.5 A 0.50005 0.50005 0 0 0 54.5 40 L 42.5 40 z M 43 41 L 54 41 L 54 60.5 C 54 61.322531 54.677469 62 55.5 62 L 59 62 L 59 65 L 42 65 L 42 62 L 45.5 62 C 46.322531 62 47 61.322531 47 60.5 L 47 45.5 C 47 44.677469 46.322531 44 45.5 44 L 43 44 L 43 41 z\"></path>\n                  </svg>\n                  Show Description\n                </ButtonDescr>\n\n                <ButtonDescr onClick={e => addToFavorite(test)}>\n                  <svg\n                    width=\"30\"\n                    height=\"30\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 17 15\"\n                    style={{\n                      borderRadius: '10px',\n                      position: 'relative',\n                      backgroundColor: isTestInFavorites(test)\n                        ? 'rgba(187,154,230, 1)'\n                        : 'white',\n                    }}\n                  >\n                    <g transform=\"translate(-2, 1)\">\n                      <path d=\"M7.85 0.428c-1.785 0.13-3.332 1.385-3.828 3.103-0.14 0.488-0.16 0.637-0.158 1.245 0 0.488 0.008 0.598 0.057 0.825 0.162 0.765 0.48 1.422 0.957 1.988 0.105 0.122 1.525 1.558 3.155 3.188l2.965 2.962 3.060-3.063c1.945-1.948 3.113-3.135 3.207-3.262 0.398-0.535 0.65-1.080 0.793-1.715 0.26-1.175 0.023-2.405-0.66-3.408-0.2-0.295-0.543-0.67-0.81-0.887-1.212-0.99-2.845-1.26-4.31-0.713-0.407 0.152-0.73 0.33-1.098 0.605l-0.18 0.135-0.107-0.088c-0.463-0.375-1.185-0.71-1.82-0.842-0.2-0.040-0.853-0.107-0.938-0.098-0.012 0.002-0.143 0.012-0.287 0.025zM9 1.182c0.69 0.162 1.248 0.465 1.78 0.967l0.232 0.217 0.242-0.232c0.517-0.495 1.1-0.807 1.795-0.965 0.227-0.050 0.33-0.057 0.762-0.057 0.558 0 0.73 0.025 1.185 0.178 1.070 0.355 1.933 1.217 2.288 2.285 0.135 0.41 0.168 0.598 0.183 1.063 0.010 0.357 0.005 0.473-0.038 0.725-0.093 0.537-0.277 1.005-0.582 1.465-0.137 0.208-0.483 0.565-3 3.085l-2.848 2.85-2.777-2.775c-1.967-1.968-2.828-2.845-2.955-3.012-0.377-0.495-0.617-1.085-0.705-1.725-0.27-1.97 1.082-3.79 3.055-4.112 0.345-0.057 1.045-0.033 1.383 0.045z\"></path>\n                    </g>\n                  </svg>\n                  Add to favorite\n                </ButtonDescr>\n                {/* SVG и текст для кнопки Добавить в избрsанное */}\n              </ButtonContainer>\n            </Item>\n          ))}\n        </List>\n      </div>\n      <Modal\n        active={modalActive}\n        setActive={setModalActive}\n        closeModal={closeModal}\n        props={selectedQuestion} // Передаем выбранный вопрос в компонент Modal\n      />\n    </>\n  );\n};\n// };\n\nexport default MyBase;\n","import styled from 'styled-components';\n\nexport const ModalContainer = styled.div`\n  height: 100vh;\n  width: 100vw;\n  background-color: rgba(0, 0, 0, 0.7);\n  backdrop-filter: blur(5px);\n  position: fixed;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  top: 0;\n  left: 0;\n  overflow: hidden;\n`;\n\nexport const ModalContent = styled.div`\n  position: relative;\n  padding: 60px 15px 30px 15px;\n  border-radius: 12px;\n  background-color: var(--iq-secondary);\n  width: 75%;\n  height: 700px;\n  position: fixed; /* Фиксированная позиция */\n  overflow: auto; /* Разрешить прокрутку при необходимости */\n  @media screen and (max-width: 767px) {\n    padding: 60px 30px 30px 30px;\n    height: 550px;\n  }\n`;\n\nexport const SvgCloseBtn = styled.button`\n  position: absolute;\n  background: transparent;\n  border: none;\n  right: 14px;\n  top: 14px;\n  cursor: pointer;\n\n  svg {\n    stroke-width: 1.5px;\n    stroke: var(--iq-cross);\n    width: 20px;\n    height: 20px;\n  }\n`;\n\nexport const Text = styled.h2`\n  text-align: center;\n  margin-bottom: 15px;\n`;\n\nexport const Descr = styled.p`\n  margin-bottom: 40px;\n`;\n\nexport const Img = styled.img`\n  // Mobil\n  @media screen and (max-width: 767px) {\n    width: 235px;\n    height: 170px;\n  }\n`;\n","import React from 'react';\n\nimport {\n  Descr,\n  ModalContainer,\n  ModalContent,\n  SvgCloseBtn,\n  Text,\n  Img,\n} from './Modal.styled';\n\nconst Modal = ({ active, setActive, closeModal, props }) => {\n  return (\n    <>\n      {active && (\n        <ModalContainer onClick={() => closeModal(false)}>\n          <ModalContent onClick={e => e.stopPropagation()}>\n            <SvgCloseBtn type=\"button\" onClick={closeModal}>\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                // viewBox=\"0 0 24 24\"\n                fill=\"black\"\n                stroke=\"currentColor\"\n                strokeWidth=\"2\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              >\n                <path d=\"M6 18L18 6M6 6l12 12\" />\n              </svg>\n            </SvgCloseBtn>\n\n            <Text>{props.question}</Text>\n            <Descr>{props.description}</Descr>\n            {props.img[0] && <Img src={props.img} alt={props.question} />}\n          </ModalContent>\n        </ModalContainer>\n      )}\n    </>\n  );\n};\n\nexport default Modal;\n"],"names":["Textbase","styled","_templateObject","_taggedTemplateLiteral","List","_templateObject2","Item","_templateObject3","TopicContainer","_templateObject4","SpanElemet","_templateObject5","Question","_templateObject6","ListQuestion","_templateObject7","Element","_templateObject8","ButtonContainer","_templateObject9","ButtonDescr","_templateObject10","MyBase","choosenBase","JSON","parse","localStorage","getItem","selectedQuestion","setSelectedQuestion","useState","modalActive","setModalActive","myQuestions","setMyQuestions","renderAnswer","answer","isCorrect","_jsx","style","backgroundColor","children","isTestInFavorites","test","some","item","question","_jsxs","_Fragment","map","idx","book","topic","answers","answerIndex","correctAnswers","includes","onClick","document","body","overflow","disabled","description","xmlns","x","y","width","height","viewBox","d","e","console","log","updatedCollection","filter","setItem","stringify","Notify","addToFavorite","borderRadius","position","transform","Modal","active","setActive","closeModal","props","ModalContainer","ModalContent","SvgCloseBtn","Text","Descr","Img","_ref","stopPropagation","type","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","img","src","alt"],"sourceRoot":""}