{"version":3,"file":"static/js/846.e9cb18b0.chunk.js","mappings":"qOAEaA,EAAWC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uDAKpBC,EAAOH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,+GAQhBG,EAAOL,EAAAA,GAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,2BAIhBK,EAAUP,EAAAA,GAAAA,IAAUQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,4BAIpBO,EAAST,EAAAA,GAAAA,IAAUU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,kC,SCuChC,EArD0B,WACxB,IAAMS,GAAcC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,aAAaC,SAAS,IAC/DC,GAAgBJ,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,aAAaG,YAAY,IAEpEC,EAAmBP,EAAYQ,KAAI,SAAAC,GACvC,IAAMC,EAAiBD,EAASE,QAAQH,KAAI,SAAAI,GAC1C,OAAIH,EAASI,eAAeC,SAASF,GAC7B,GAANG,OAAUH,EAAM,6DAETA,CAEX,IAEA,OAAAI,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKP,GAAQ,IACXE,QAASD,GAEb,IAEMO,EAAkB,SAAAR,GACtB,OAAOJ,EAAca,MAAK,SAAAC,GAAM,OAAIA,EAAOV,WAAaA,EAASA,QAAQ,GAC3E,EAEA,OACEW,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAClC,EAAQ,CAAAiC,SAAC,gQACVC,EAAAA,EAAAA,KAAC9B,EAAI,CAAA6B,SACFd,EAAiBC,KAAI,SAACC,EAAUc,EAAOC,GAAG,OACzCJ,EAAAA,EAAAA,MAAC1B,EAAI,CAEH+B,MAAO,CACLC,gBAAiBT,EAAgBR,GAC7B,aACA,SACJY,SAAA,EAEFC,EAAAA,EAAAA,KAAA,KAAAD,SAAIZ,EAASA,YACba,EAAAA,EAAAA,KAAC1B,EAAO,CAAAyB,SACLZ,EAASE,QAAQH,KAAI,SAACC,EAAUc,EAAOC,GACtC,OACEJ,EAAAA,EAAAA,MAACtB,EAAM,CAAAuB,SAAA,CACJE,EAAQ,EAAE,MAAId,IADJc,EAIjB,QAfGA,EAiBA,QAKjB,C","sources":["Pages/AnsweredQuestions/AnsweredQuestions.styled.js","Pages/AnsweredQuestions/AnsweredQuestions.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const TextPage = styled.h2`\n  font-weight: 700;\n  margin-bottom: 40px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  list-style: none;\n  gap: 20px;\n`;\n\nexport const Item = styled.li`\n  width: 400px;\n`;\n\nexport const Answers = styled.div`\n  padding: 15px;\n`;\n\nexport const Answer = styled.div`\n  margin-bottom: 10px;\n`;\n","import { useSelector } from 'react-redux';\nimport {\n  List,\n  TextPage,\n  Item,\n  Answers,\n  Answer,\n} from './AnsweredQuestions.styled';\n\nconst AnsweredQuestions = () => {\n  const allQuestion = useSelector(state => state.testsReducer.questions);\n  const rightQuestion = useSelector(state => state.testsReducer.rightAnswers);\n\n  const updatedQuestions = allQuestion.map(question => {\n    const updatedAnswers = question.answers.map(answer => {\n      if (question.correctAnswers.includes(answer)) {\n        return `${answer} (Правильно)`;\n      } else {\n        return answer;\n      }\n    });\n\n    return {\n      ...question,\n      answers: updatedAnswers,\n    };\n  });\n\n  const isRightQuestion = question => {\n    return rightQuestion.some(rightQ => rightQ.question === question.question);\n  };\n\n  return (\n    <div>\n      <TextPage>Зеленым помечены правельно отвеченные вопросы</TextPage>\n      <List>\n        {updatedQuestions.map((question, index, arr) => (\n          <Item\n            key={index}\n            style={{\n              backgroundColor: isRightQuestion(question, index, arr)\n                ? 'lightgreen'\n                : 'white',\n            }}\n          >\n            <p>{question.question}</p>\n            <Answers>\n              {question.answers.map((question, index, arr) => {\n                return (\n                  <Answer key={index}>\n                    {index + 1} - {question}\n                  </Answer>\n                );\n              })}\n            </Answers>\n          </Item>\n        ))}\n      </List>\n    </div>\n  );\n};\n\nexport default AnsweredQuestions;\n"],"names":["TextPage","styled","_templateObject","_taggedTemplateLiteral","List","_templateObject2","Item","_templateObject3","Answers","_templateObject4","Answer","_templateObject5","allQuestion","useSelector","state","testsReducer","questions","rightQuestion","rightAnswers","updatedQuestions","map","question","updatedAnswers","answers","answer","correctAnswers","includes","concat","_objectSpread","isRightQuestion","some","rightQ","_jsxs","children","_jsx","index","arr","style","backgroundColor"],"sourceRoot":""}