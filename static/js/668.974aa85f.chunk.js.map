{"version":3,"file":"static/js/668.974aa85f.chunk.js","mappings":"mMAEO,MAAMA,EAAOC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,sFAOhBC,EAAOH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,mD,aCH7B,MAoEA,EApEiBG,KACf,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAASC,GAGnCC,EAAeA,CAACC,EAAQC,IACrBA,GACLC,EAAAA,EAAAA,KAAA,QAAMC,MAAO,CAAEC,gBAAiB,aAAcC,SAAEL,KAEhDE,EAAAA,EAAAA,KAAA,QAAAG,SAAOL,IAaX,OACEM,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAF,SAAA,EACEC,EAAAA,EAAAA,MAAA,QAAME,OAAO,WAAUH,SAAA,EACrBH,EAAAA,EAAAA,KAAA,SAAOO,QAAQ,WAAUJ,SAAC,mBAC1BH,EAAAA,EAAAA,KAAA,UAAQQ,GAAG,WAAWC,SAbAC,IAC1B,MAAMC,EAAgBD,EAAME,OAAOC,MACb,gCAAlBF,EACFjB,EAAYE,GACe,WAAlBe,GACTjB,EAAYoB,EACd,EAOwDX,UAElDH,EAAAA,EAAAA,KAAA,UAAQa,MAAM,8BAAwBV,SAAC,sCAI3CH,EAAAA,EAAAA,KAAA,OAAAG,UACEH,EAAAA,EAAAA,KAACd,EAAI,CAAAiB,SACFV,EAASsB,KAAI,CAACC,EAAMC,KACnBb,EAAAA,EAAAA,MAACd,EAAI,CAAaW,MAAO,CAAEiB,aAAc,QAASf,SAAA,EAChDH,EAAAA,EAAAA,KAAA,QAAAG,SAAM,0CACNH,EAAAA,EAAAA,KAAA,KAAAG,SAAIa,EAAKG,YACTnB,EAAAA,EAAAA,KAAA,MAAAG,SACGa,EAAKI,QAAQL,KAAI,CAACjB,EAAQuB,KACzBrB,EAAAA,EAAAA,KAAA,MAAAG,SACGN,EAAaC,EAAQkB,EAAKM,eAAeC,SAASzB,KAD5CuB,SALJJ,WA8BhB,C","sources":["Pages/AllTests/AllTests.styled.js","Pages/AllTests/AllTests.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  gap: 30px;\n`;\n\nexport const Item = styled.ul`\n  width: 400px;\n  /* height: 500px; */\n`;\n","import { useState } from 'react';\nimport Klener from '../../Files/ClenerNew.json';\nimport Legislativa from '../../Files/Legislativa_Báze_2023.json';\nimport { Item, List } from './AllTests.styled';\n// import Functions from 'Files/Functions';\n\nconst AllTests = () => {\n  const [allTests, setAllTests] = useState(Legislativa);\n  //   const [modalActive, setModalActive] = useState(false);\n\n  const renderAnswer = (answer, isCorrect) => {\n    return isCorrect ? (\n      <span style={{ backgroundColor: '#1fa01f6f' }}>{answer}</span>\n    ) : (\n      <span>{answer}</span>\n    );\n  };\n\n  const handleOption1Change = event => {\n    const selectedValue = event.target.value;\n    if (selectedValue === 'Legislativa_Báze_2023') {\n      setAllTests(Legislativa);\n    } else if (selectedValue === 'Klener') {\n      setAllTests(Klener);\n    }\n  };\n\n  return (\n    <>\n      <form action=\"formBase\">\n        <label htmlFor=\"formBase\">Vyberte testy</label>\n        <select id=\"formBase\" onChange={handleOption1Change}>\n          {/* <option value=\"Klener\">Klener</option> */}\n          <option value=\"Legislativa_Báze_2023\">Legislativa_Báze_2023</option>\n          {/* <option value=\"Klener\">Klener</option> */}\n        </select>\n      </form>\n      <div>\n        <List>\n          {allTests.map((test, index) => (\n            <Item key={index} style={{ marginBottom: '70px' }}>\n              <span>Вопрос</span>\n              <p>{test.question}</p>\n              <ul>\n                {test.answers.map((answer, answerIndex) => (\n                  <li key={answerIndex}>\n                    {renderAnswer(answer, test.correctAnswers.includes(answer))}\n                  </li>\n                ))}\n                {/* <p>{test.description}</p>\n                <ul>\n                  {test.img.map((image, idx) => {\n                    return (\n                      <li key={idx}>\n                        <img\n                          src={image}\n                          alt=\"myPhoto\"\n                          width={150}\n                          height={150}\n                        />\n                      </li>\n                    );\n                  })}\n                </ul> */}\n              </ul>\n            </Item>\n          ))}\n        </List>\n      </div>\n      {/* <Functions></Functions> */}\n    </>\n  );\n};\n\nexport default AllTests;\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","AllTests","allTests","setAllTests","useState","Legislativa","renderAnswer","answer","isCorrect","_jsx","style","backgroundColor","children","_jsxs","_Fragment","action","htmlFor","id","onChange","event","selectedValue","target","value","Klener","map","test","index","marginBottom","question","answers","answerIndex","correctAnswers","includes"],"sourceRoot":""}